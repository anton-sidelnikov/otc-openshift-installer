package manifests

import (
	"path/filepath"

	"github.com/anton-sidelnikov/otc-openshift-installer/pkg/asset"
	"github.com/anton-sidelnikov/otc-openshift-installer/pkg/asset/installconfig"
)

var (
	clusterCSIDriverConfigFileName = filepath.Join(manifestDir, "cluster-csi-driver-config.yaml")
)

// ClusterCSIDriverConfig generates the cluster-csi-driver-config.yaml file.
type ClusterCSIDriverConfig struct {
	File *asset.File
}

// Type check the interface at compile time.
var _ asset.WritableAsset = (*ClusterCSIDriverConfig)(nil)

// Name returns a human friendly name for the asset.
func (*ClusterCSIDriverConfig) Name() string {
	return "Cluster CSI Driver Config"
}

// Dependencies returns all of the dependencies directly needed to generate the
// asset.
func (*ClusterCSIDriverConfig) Dependencies() []asset.Asset {
	return []asset.Asset{
		&installconfig.InstallConfig{},
		&installconfig.ClusterID{},
	}
}

// Generate the ClusterCSIDriverConfig.
func (csi *ClusterCSIDriverConfig) Generate(dependencies asset.Parents) error {
	installConfig := &installconfig.InstallConfig{}
	clusterID := &installconfig.ClusterID{}
	dependencies.Get(installConfig, clusterID)

	return nil
}

// Files returns the files generated by the asset.
func (csi *ClusterCSIDriverConfig) Files() []*asset.File {
	if csi.File != nil {
		return []*asset.File{csi.File}
	}
	return []*asset.File{}
}

// Load loads the already-rendered files back from disk.
func (csi *ClusterCSIDriverConfig) Load(f asset.FileFetcher) (bool, error) {
	return false, nil
}
